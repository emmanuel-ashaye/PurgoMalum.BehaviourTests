<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" duration="3.2152632999999997" testcasecount="16" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" start-time="2020-02-28T 14:57:55Z" end-time="2020-02-28T 14:57:59Z">
  <test-suite type="Assembly" name="PurgoMalum.BehaviourTests.dll" fullname="/Users/emmanuelashaye/Projects/PurgoMalum.BehaviourTests/PurgoMalum.BehaviourTests/bin/Debug/netcoreapp3.1/PurgoMalum.BehaviourTests.dll" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" duration="3.2152633">
    <test-suite type="TestSuite" name="PurgoMalum" fullname="PurgoMalum" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" duration="3.2152633">
      <test-suite type="TestSuite" name="BehaviourTests" fullname="PurgoMalum.BehaviourTests" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" duration="3.2152633">
        <test-suite type="TestSuite" name="Features" fullname="PurgoMalum.BehaviourTests.Features" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" duration="3.2152633">
          <test-suite type="TestFixture" name="ProfainWordFilterFeature" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" total="16" passed="15" failed="1" inconclusive="0" skipped="0" result="Failed" duration="3.2152633">
            <test-case name="Chech supported custom replacement special character(input: &quot;-&quot;, result: &quot;It's been a bit of a ---- show, no thanks to that &quot;..., exampleTags: [])" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechSupportedCustomReplacementSpecialCharacter" methodname="ChechSupportedCustomReplacementSpecialCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.3925848" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech supported custom replacement special character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement character as '-'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("-") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a ---- show, no thanks to that -----'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.3s)

]]></output>
            </test-case>
            <test-case name="Chech supported custom replacement special character(input: &quot;=&quot;, result: &quot;It's been a bit of a ==== show, no thanks to that &quot;..., exampleTags: [])" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechSupportedCustomReplacementSpecialCharacter" methodname="ChechSupportedCustomReplacementSpecialCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.2041639" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech supported custom replacement special character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement character as '='
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("=") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a ==== show, no thanks to that ====='
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Chech supported custom replacement special character(input: &quot;_&quot;, result: &quot;It's been a bit of a ____ show, no thanks to that &quot;..., exampleTags: [])" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechSupportedCustomReplacementSpecialCharacter" methodname="ChechSupportedCustomReplacementSpecialCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1926325" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech supported custom replacement special character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement character as '_'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("_") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a ____ show, no thanks to that _____'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Chech supported custom replacement special character(input: &quot;~&quot;, result: &quot;It's been a bit of a ~~~~ show, no thanks to that &quot;..., exampleTags: [])" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechSupportedCustomReplacementSpecialCharacter" methodname="ChechSupportedCustomReplacementSpecialCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1945255" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech supported custom replacement special character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement character as '~'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("~") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a ~~~~ show, no thanks to that ~~~~~'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check custom replacement word" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckCustomReplacementWord" methodname="CheckCustomReplacementWord" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1787809" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check custom replacement word" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement as 'blank'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementAs("blank") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a blank show, no thanks to that blank'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check default profain word replacement" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckDefaultProfainWordReplacement" methodname="CheckDefaultProfainWordReplacement" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1780789" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check default profain word replacement" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'xml'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("xml") (0.0s)
When I enter 'shit'
-> done: ProfainWordFilterSteps.IEnter("shit") (0.0s)
Then the output text is '****'
-> done: ProfainWordFilterSteps.TheOutputTextIs("****") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check custom replacement word with special characters" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckCustomReplacementWordWithSpecialCharacters" methodname="CheckCustomReplacementWordWithSpecialCharacters" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1806575" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check custom replacement word with special characters" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement as '_~!-=|*'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementAs("_~!-=|*") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a _~!-=|* show, no thanks to that _~!-=|*'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check profain word is replaced in a sentence" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckProfainWordIsReplacedInASentence" methodname="CheckProfainWordIsReplacedInASentence" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1861094" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check profain word is replaced in a sentence" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
When I enter 'It's been a bit shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit s...") (0.0s)
Then the output text is 'It's been a bit **** show, no thanks to that *****'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit *...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check custom replacement word with unsupported special characters" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckCustomReplacementWordWithUnsupportedSpecialCharacters" methodname="CheckCustomReplacementWordWithUnsupportedSpecialCharacters" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.183964" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check custom replacement word with unsupported special characters" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement as '_~!-=|*,'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementAs("_~!-=|*,") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'Invalid User Replacement Text'
-> done: ProfainWordFilterSteps.TheOutputTextIs("Invalid User Repl...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Chech unsupported custom replacement special character(input: &quot;!&quot;, result: &quot;Invalid User Replacement Characters&quot;, exampleTags: [])" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechUnsupportedCustomReplacementSpecialCharacter" methodname="ChechUnsupportedCustomReplacementSpecialCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1810805" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech unsupported custom replacement special character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'plain'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("plain") (0.0s)
And I specify profain word replacement character as '!'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("!") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'Invalid User Replacement Characters'
-> done: ProfainWordFilterSteps.TheOutputTextIs("Invalid User Repl...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check sentance unchanged fail" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckSentanceUnchangedFail" methodname="CheckSentanceUnchangedFail" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Failed" duration="0.2316781" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check sentance unchanged fail" />
                <property name="Category" value="Bug" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
When I enter 'It's been a bit of a great show, thanks to the team'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a great show, thanks to the team'
-> error: Expected actualOutputText to be equivalent to 
"It's been a bit of a great show, thanks to the team", but 
"It's been a bit o*****reat show, thanks to the team" differs near "***" (index 17).

]]></output>
              <failure>
                <message>Expected actualOutputText to be equivalent to 
"It's been a bit of a great show, thanks to the team", but 
"It's been a bit o*****reat show, thanks to the team" differs near "***" (index 17).</message>
                <stack-trace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.StringEqualityValidator.ValidateAgainstMismatch()
   at FluentAssertions.Primitives.StringValidator.Validate()
   at FluentAssertions.Primitives.StringAssertions.BeEquivalentTo(String expected, String because, Object[] becauseArgs)
   at PurgoMalum.BehaviourTests.Features.ProfainWordFilterSteps.TheOutputTextIs(String expectedOutputText) in /Users/emmanuelashaye/Projects/PurgoMalum.BehaviourTests/PurgoMalum.BehaviourTests/Features/ProfainWordFilterSteps.cs:line 64
   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan&amp; duration)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)
   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.OnAfterLastStep()
   at TechTalk.SpecFlow.TestRunner.CollectScenarioErrors()
   at PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ScenarioCleanup()
   at PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckSentanceUnchangedFail() in /Users/emmanuelashaye/Projects/PurgoMalum.BehaviourTests/PurgoMalum.BehaviourTests/Features/ProfainWordFilter.feature:line 41</stack-trace>
              </failure>
            </test-case>
            <test-case name="Check sentance unchanged" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckSentanceUnchanged" methodname="CheckSentanceUnchanged" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1865839" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check sentance unchanged" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
When I enter 'The show has been a bit of a success, thanks to the team'
-> done: ProfainWordFilterSteps.IEnter("The show has been...") (0.0s)
Then the output text is 'The show has been a bit of a success, thanks to the team'
-> done: ProfainWordFilterSteps.TheOutputTextIs("The show has been...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check if sentence does not contains profanity" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckIfSentenceDoesNotContainsProfanity" methodname="CheckIfSentenceDoesNotContainsProfanity" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.178876" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check if sentence does not contains profanity" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'containsprofanity'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("containsprofanity") (0.0s)
When I enter 'It's a great day'
-> done: ProfainWordFilterSteps.IEnter("It's a great day") (0.0s)
Then the output text is 'false'
-> done: ProfainWordFilterSteps.TheOutputTextIs("false") (0.2s)

]]></output>
            </test-case>
            <test-case name="Chech custom replacement character" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechCustomReplacementCharacter" methodname="ChechCustomReplacementCharacter" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.1833164" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech custom replacement character" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I specify profain word replacement character as '_'
-> done: ProfainWordFilterSteps.ISpecifyProfainWordReplacementCharacterAs("_") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'It's been a bit of a ____ show, no thanks to that _____'
-> done: ProfainWordFilterSteps.TheOutputTextIs("It's been a bit o...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Chech add to profain list" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.ChechAddToProfainList" methodname="ChechAddToProfainList" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.183698" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Chech add to profain list" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'json'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("json") (0.0s)
And I add these words to the replacement list 'fool,freak'
-> done: ProfainWordFilterSteps.IAddTheseWordsToTheReplacementList("fool,freak") (0.0s)
When I enter 'Dont be a fool, you freak'
-> done: ProfainWordFilterSteps.IEnter("Dont be a fool, y...") (0.0s)
Then the output text is 'Dont be a ****, you *****'
-> done: ProfainWordFilterSteps.TheOutputTextIs("Dont be a ****, y...") (0.2s)

]]></output>
            </test-case>
            <test-case name="Check if sentence contains profanity" fullname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature.CheckIfSentenceContainsProfanity" methodname="CheckIfSentenceContainsProfanity" classname="PurgoMalum.BehaviourTests.Features.ProfainWordFilterFeature" result="Passed" duration="0.178533" asserts="0">
              <properties>
                <property name="FeatureTitle" value="ProfainWordFilter" />
                <property name="Description" value="Check if sentence contains profanity" />
              </properties>
              <output><![CDATA[Given I call the word filter endpoint
-> done: ProfainWordFilterSteps.ICallTheWordFilterEndpoint() (0.0s)
And I specify the response type as 'containsprofanity'
-> done: ProfainWordFilterSteps.ISpecifyTheResponseTypeAs("containsprofanity") (0.0s)
When I enter 'It's been a bit of a shit show, no thanks to that bitch'
-> done: ProfainWordFilterSteps.IEnter("It's been a bit o...") (0.0s)
Then the output text is 'true'
-> done: ProfainWordFilterSteps.TheOutputTextIs("true") (0.2s)

]]></output>
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <errors />
  </test-suite>
</test-run>